

services:
  # ========== PUBLIC FACADE ==========
  gate-api:
    build: ./api
    container_name: gate-api
    ports:
      - "8000:8000"                                # <-- ONLY public port
    environment:
      # Gate public
      GATE_BASE_URL: "http://localhost:8000"
      GATE_ISSUER: "http://hydra:4444"      # later: your https Gate domain if you fully mask Hydra
      # Hydra (internal)
      HYDRA_PUBLIC_URL: "http://hydra:4444"
      HYDRA_ADMIN_URL:  "http://hydra:4445"
      ISSUER: "http://localhost:8000"
      # Gate's OAuth client (seeded by hydra-init)
      OAUTH_CLIENT_ID: "test-client-ssui20"
      OAUTH_CLIENT_SECRET: "gate-client-secret"
      OAUTH_REDIRECT_URI: "http://localhost:3000/callback"
      OAUTH_SCOPE: "sacred.read sacred.write"
      OAUTH_AUDIENCE: ""
      # If your Gate API needs to touch SuperTokens directly (usually not):
      SUPERTOKENS_CORE_URI: "http://supertokens:3567"
    depends_on:
      - hydra-migrate
      - hydra
      - login-consent
      - supertokens
    restart: unless-stopped

  # ========== HYDRA ==========
  hydra:
    image: oryd/hydra:v2
    container_name: hydra
    volumes:
      - ./hydra/config:/etc/config
    command:
      - serve
      - all
      - --config
      - /etc/config/hydra.yml
      - --dev                                     # remove in prod
    environment:
      DSN: "postgres://hydra:hydra@hydra-db:5432/hydra?sslmode=disable"
    depends_on:
      - hydra-db
    restart: unless-stopped
    # NOTE: no ports -> stays private (reachable by other services via Docker network)

  hydra-migrate:
    image: oryd/hydra:v2
    container_name: hydra-migrate
    command: migrate sql -e --yes
    environment:
      DSN: "postgres://hydra:hydra@hydra-db:5432/hydra?sslmode=disable"
    depends_on:
      - hydra-db
    restart: on-failure

  hydra-db:
    image: postgres:14
    container_name: hydra-db
    environment:
      POSTGRES_USER: hydra
      POSTGRES_PASSWORD: hydra
      POSTGRES_DB: hydra
    volumes:
      - hydra_db_data:/var/lib/postgresql/data
    restart: unless-stopped

  # ========== LOGIN + CONSENT (PRIVATE) ==========
  login-consent:
    command: >
      uvicorn app_main:app
      --host 0.0.0.0
      --port 3002
      --workers 1
      --no-server-header
      --log-level info
    build: ./login-consent
    container_name: login-consent
    ports:
      - "3002:3002" 
    environment:
      PYTHONUNBUFFERED: "1"     # flush prints immediately
      # Hydra Admin for login/consent accept/deny
      HYDRA_ADMIN_URL: "http://hydra:4445"
      # SuperTokens Core for session management
      SUPERTOKENS_CORE_URI: "http://supertokens:3567"
      # Optional app configs your code might expect:
      APP_BASE_URL: "http://localhost:8000"
      WEB_ORIGIN: "http://localhost:3000"
      API_DOMAIN: "http://localhost:8000"
      GOOGLE_CLIENT_ID : "654985009658-slb6ckmbuobiudphfedclun3fdup8e77.apps.googleusercontent.com"
      GOOGLE_CLIENT_SECRET : "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"
    depends_on:
      - hydra
      - supertokens
    restart: unless-stopped
    # no ports -> keep private (Hydra calls it internally)

  # ========== SUPERTOKENS (PRIVATE) ==========
  supertokens:
    image: supertokens/supertokens-postgresql:latest
    container_name: supertokens
    environment:
      # Postgres connection for SuperTokens Core
      POSTGRESQL_CONNECTION_URI: "postgresql://supertokens:supertokens@supertokens-db:5432/supertokens"
      # Optional: table prefix, DB pool, etc.
      # POSTGRESQL_TABLES_PREFIX: "st_"
      API_KEYS: ""   # empty for now (you said youâ€™ll add keys later)
    depends_on:
      - supertokens-db
    restart: unless-stopped
    # no ports -> keep private (internal calls from login-consent / gate-api only)

  supertokens-db:
    image: postgres:14
    container_name: supertokens-db
    environment:
      POSTGRES_USER: supertokens
      POSTGRES_PASSWORD: supertokens
      POSTGRES_DB: supertokens
    volumes:
      - supertokens_db_data:/var/lib/postgresql/data
    restart: unless-stopped

  # ========== OPTIONAL: seed a confidential client for Gate ==========
  hydra-init:
    image: python:3.11-alpine
    container_name: hydra-init
    depends_on:
      - hydra
    environment:
      HYDRA_ADMIN_URL: "http://hydra:4445"
      GATE_CLIENT_ID: "gate-client"
      GATE_CLIENT_SECRET: "gate-client-secret"
      GATE_REDIRECT_URI: "http://localhost:3000/callback"
    volumes:
      - ./hydra-init.py:/opt/hydra-init.py:ro
    entrypoint: ["python", "/opt/hydra-init.py"]
    restart: "no"
      
volumes:
  hydra_db_data:
  supertokens_db_data:
