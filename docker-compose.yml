services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: supertokens
      POSTGRES_PASSWORD: supertokens
      POSTGRES_DB: supertokens
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U supertokens"]
      interval: 5s
      timeout: 5s
      retries: 10

  supertokens-core:
    image: registry.supertokens.io/supertokens/supertokens-postgresql
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRESQL_CONNECTION_URI: "postgresql://supertokens:supertokens@db:5432/supertokens"
      DISABLE_TELEMETRY: "true"
    ports:
      - "3567:3567"

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    environment:
      ISSUER: "http://localhost:3001"
      SUPERTOKENS_CORE: "http://supertokens-core:3567"
      WEB_ORIGIN: "http://localhost:3000"
    ports:
      - "3001:3001"
    depends_on:
      supertokens-core:
        condition: service_started

  hydra-db:
    image: postgres:15
    environment:
      POSTGRES_USER: hydra
      POSTGRES_PASSWORD: hydra
      POSTGRES_DB: hydra
    ports:
      - "5442:5432"  # avoid clashing with your other DB
    volumes:
      - hydra_db:/var/lib/postgresql/data

  hydra-migrate:
    image: oryd/hydra:v2.2.0
    depends_on: [hydra-db]
    environment:
      DSN: postgres://hydra:hydra@hydra-db:5432/hydra?sslmode=disable
    command: migrate sql -e --yes

  hydra:
    image: oryd/hydra:v2.2.0
    depends_on: [hydra-migrate]
    ports:
      - "4444:4444"   # public
      - "4445:4445"   # admin
    environment:
      DSN: postgres://hydra:hydra@hydra-db:5432/hydra?sslmode=disable
      URLS_SELF_ISSUER: ${HYDRA_ISSUER:-http://localhost:4444}
      URLS_LOGIN: ${HYDRA_LOGIN_UI:-http://localhost:3002/login}
      URLS_CONSENT: ${HYDRA_CONSENT_UI:-http://localhost:3002/consent}
      OAUTH2_EXPOSE_INTERNAL_ERRORS: "true"
      # Optional: make access tokens JWT so resource servers can verify locally
      STRATEGIES_ACCESS_TOKEN: jwt
      SECRETS_SYSTEM: ${HYDRA_SYSTEM_SECRET:-you_should_change_me}
    command: serve all --dev #--dangerous-force-http

  # Login + Consent app (FastAPI)
  gate-login-consent:
    build:
      context: ./login-consent
      dockerfile: Dockerfile
    environment:
      ENV: dev
      WEB_ORIGIN: http://localhost:3000
      API_DOMAIN: http://localhost:3002
      HYDRA_ADMIN_URL: http://hydra:4445
      # Supertokens backend you already run in gate-lite
      SUPERTOKENS_CONNECTION_URI: http://supertokens-core:3567
    ports:
      - "3002:3002"
    depends_on:
      - hydra
      - supertokens-core   # from your existing stack

volumes:
  hydra_db: